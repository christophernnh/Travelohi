// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/deletepromo": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a promo based on the given ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Promo"
                ],
                "summary": "Delete promo by ID",
                "parameters": [
                    {
                        "description": "Promo ID",
                        "name": "id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.SuccessResponseDeletePromo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponseDeletePromo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponseDeletePromo"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponseDeletePromo"
                        }
                    }
                }
            }
        },
        "/api/gethoteltransactions": {
            "post": {
                "description": "Get hotel transactions based on user ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "HotelTransactions"
                ],
                "summary": "Get hotel transactions for a user",
                "parameters": [
                    {
                        "description": "User ID",
                        "name": "userId",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.HotelTransactionResponse"
                        }
                    }
                }
            }
        },
        "/api/updatecredit": {
            "put": {
                "description": "Update the credit card details for a user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update user credit card information",
                "parameters": [
                    {
                        "description": "User ID",
                        "name": "id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Credit card number (16 digits)",
                        "name": "cardNumber",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "CVV (3 digits)",
                        "name": "cvv",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Expiration month (1-12)",
                        "name": "expMonth",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Expiration year",
                        "name": "expYear",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/user": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get details of the authenticated user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get user details",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.SuccessResponseUser"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponseUser"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponseUser"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "controllers.ErrorResponseDeletePromo": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "controllers.ErrorResponseUser": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "controllers.HotelTransactionDetails": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "checkindate": {
                    "type": "string"
                },
                "checkoutdate": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "hotelid": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "ispaid": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "orderdate": {
                    "type": "string"
                },
                "paymentmethod": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "roomname": {
                    "type": "string"
                },
                "roomtypeid": {
                    "type": "string"
                }
            }
        },
        "controllers.HotelTransactionResponse": {
            "type": "object",
            "properties": {
                "body": {
                    "description": "in: body",
                    "type": "object",
                    "properties": {
                        "hoteltransactions": {
                            "description": "HotelTransactions is a list of hotel transaction details.",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/controllers.HotelTransactionDetails"
                            }
                        },
                        "message": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "controllers.SuccessResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "controllers.SuccessResponseDeletePromo": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "controllers.SuccessResponseUser": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/models.User"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "birthDate": {
                    "type": "string"
                },
                "cardnumber": {
                    "type": "string"
                },
                "cvv": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "expiremonth": {
                    "type": "string"
                },
                "expireyear": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isbanned": {
                    "type": "boolean"
                },
                "issubscribed": {
                    "type": "boolean"
                },
                "lastname": {
                    "type": "string"
                },
                "otp": {
                    "type": "string"
                },
                "otpexpiry": {
                    "type": "string"
                },
                "profilepicture": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "securityAnswer": {
                    "type": "string"
                },
                "securityQuestion": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8000",
	BasePath:         "/",
	Schemes:          []string{"http"},
	Title:            "TraveloHI API",
	Description:      "This is the API documentation for TraveloHI",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
